server {
	listen 443;
	listen [::]:443;

	server_name jitsi.${PUBLIC_SITE};

	include /config/nginx/ssl.conf;

	client_max_body_size 0;

	root /usr/share/jitsi-meet;

	# ssi on with javascript for multidomain variables in config.js
	ssi on;
	ssi_types application/x-javascript application/javascript;

	index index.jss index.html index.htm;
	error_page 404 /static/404.html;

	add_header Permissions-Policy "interest-cohort=()";

	location = /config.js {
	    alias /config/config.js;
	}

	location = /interface_config.js {
	    alias /config/interface_config.js;
	}

	location = /external_api.js {
	    alias /usr/share/jitsi-meet/libs/external_api.min.js;
	}

	# ensure all static content can always be found first
	location ~ ^/(libs|css|static|images|fonts|lang|sounds|connection_optimization|.well-known)/(.*)$
	{
	    alias /usr/share/jitsi-meet/$1/$2;
	}

	# colibri (JVB) websockets
	location ~ ^/colibri-ws/([a-zA-Z0-9-\.]+)/(.*) {
	    proxy_pass http://$1:9090/colibri-ws/$1/$2$is_args$args;
	    proxy_http_version 1.1;
	    proxy_set_header Upgrade $http_upgrade;
	    proxy_set_header Connection "upgrade";
	    tcp_nodelay on;
	}

	location = /http-bind {
	    proxy_pass http://xmpp.meet.jitsi:5280/http-bind;
	    proxy_set_header Host meet.jitsi;
	    proxy_set_header X-Forwarded-Host meet.jitsi;
	    proxy_set_header X-Forwarded-For $remote_addr;
	}

	# xmpp websockets
	location = /xmpp-websocket {
	    proxy_pass http://xmpp.meet.jitsi:5280/xmpp-websocket;
	    proxy_http_version 1.1;
	    proxy_set_header Host meet.jitsi;
	    proxy_set_header Connection "upgrade";
	    proxy_set_header Upgrade $http_upgrade;

	    proxy_set_header X-Forwarded-For $remote_addr;
	    tcp_nodelay on;
	}

	location ~ ^/([^/?&:'"]+)$ {
	    try_files $uri @root_path;
	}

	location @root_path {
	    rewrite ^/(.*)$ / break;
	}

	access_log /var/log/nginx/jitsi-access-ssl.log combined;
	error_log /var/log/nginx/jitsi-error-ssl.log; 
}
